cxx_opt = -O0 -g
lnk_opt =
# cxx_opt = -O3 -ffast-math -DNDEBUG
# lnk_opt = -flto

cxx_bin = g++-4.9
cxx_warns = -Wall -Wno-unused-function -Wno-sign-compare -Wno-char-subscripts
cxx_flags = -std=c++14 -I. -march=native -fdiagnostics-color=always $cxx_opt $cxx_warns
lnk_flags = $lnk_opt

rule cxx
  depfile = $out.d
  command = $cxx_bin $cxx_flags -c $in -MMD -MF $out.d
rule lnk
  command = $cxx_bin $lnk_flags -L. -o $out $in
rule lib
  command = ar rcs $out $in
rule lex
  command = flex -o $out $in
rule bison
  command = bison -d $in

build base.o:       cxx base.cxx
build base.a:       lib base.o
build base_test.o:  cxx base_test.cxx
build base.test:    lnk base_test.o base.a

build lex.yy.cxx:   lex lex.l | grammar.tab.cxx
build lex.yy.o:     cxx lex.yy.cxx
build lex.yy.a:     lib lex.yy.o base.o
build lex_test.o:   cxx lex_test.cxx
build lex.test:     lnk lex_test.o lex.yy.a

build grammar_node.o:   cxx grammar_node.cxx

build grammar.tab.cxx:  bison grammar.yxx
build grammar.tab.o:    cxx grammar.tab.cxx
build grammar.tab.a:    lib grammar.tab.o lex.yy.o

build parser.o:         cxx parser.cxx
build parser.a:         lib parser.o $
                            grammar_node.o $
                            grammar.tab.o $
                            lex.yy.o $
                            base.o
build parser_test.o:    cxx parser_test.cxx
build parser.test:      lnk parser_test.o parser.a
