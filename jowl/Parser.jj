options
{
  //BUILD_TOKEN_MANAGER = false;
  JDK_VERSION = "1.8";
  STATIC = false;
  SUPPORT_CLASS_VISIBILITY_PUBLIC = false;
  //USER_CHAR_STREAM = true;
}

PARSER_BEGIN(Parser)
package owl.lang;

public class Parser {
  //
}
PARSER_END(Parser)

SKIP: { " " | "\r" | "\n" | "\t" }

TOKEN:
{
    <L: ["a"-"z", "A"-"Z", "0"-"9", "_"]>
|   <O: ["0"-"7"]>
|   <D: ["0"-"9"]>
|   <H: ["0"-"9", "a"-"f", "A"-"F"]>
|   <NF: ["a"-"z"]>
|   <TF: ["A"-"Z"]>
|   <NUM_DEC: (<D>)+>
|   <NUM_HEX: "0x" (<H>)+>
|   <NUM_OCT: "0o" (<D>)+>
|   <NAME: (<NF>)(<L>)*>
|   "."
}

AstNode module(): {
  Token t;
  AstNode nodeModule = null;
}
{
  (t = <NAME>) (nodeModule = module())
  {
    nodeModule.addChild(new NameNode(t.toString()));
    return nodeModule;
  }
| <EOF> {
    return new ModuleNode();
}
}
