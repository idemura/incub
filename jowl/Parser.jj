options
{
  //BUILD_TOKEN_MANAGER = false;
  JDK_VERSION = "1.8";
  STATIC = false;
  SUPPORT_CLASS_VISIBILITY_PUBLIC = false;
  //USER_CHAR_STREAM = true;
}

PARSER_BEGIN(Parser)
package owl.lang;

public class Parser {
  //
}
PARSER_END(Parser)

SKIP: { " " | "\r" | "\n" | "\t" }

TOKEN:
{
  "as"
| "fn"
| "." | "," | "_"
| ":" | ";"
| "(" | ")"
| "{" | "}"
| "[" | "]"
| <O: ["0"-"7"]>
| <D: ["0"-"9"]>
| <H: ["0"-"9", "a"-"f", "A"-"F"]>
| <NF: ["a"-"z"]>
| <TF: ["A"-"Z"]>
| <L: ["a"-"z", "A"-"Z", "0"-"9", "_"]>
| <NUM_DEC: (<D>)+>
| <NUM_HEX: "0x" (<H>)+>
| <NUM_OCT: "0o" (<D>)+>
| <NAME: (<NF>)(<L>)*>
| <TYPE_NAME: (<TF>)(<L>)*>
}

AstModule module(): {
  AstModule module = new AstModule();
  AstFunction f;
}
{
  (f = function() { module.addFunction(f); })*
  {
    return module;
  }
}

AstName qualifiedName(): {
  AstName name = new AstName();
  Token tok;
}
{
  tok = <NAME> { name.name = tok.image; }
  ("." tok = <NAME> { name.name += "." + tok.image; })*
  {
    return name;
  }
| "_" { return AstName.WILDCARD; }
}

AstFunction function(): {
  AstFunction function = new AstFunction();
  Token tok;
}
{
  "fn" (tok = <NAME> { function.name = tok.image; })
  "(" (function.arguments = argumentList())? ")"
  "{" "}"
  {
    return function;
  }
}

AstArgumentList argumentList(): {
  AstArgumentList argList = new AstArgumentList();
  AstArgument a;
}
{
  a = argument() { argList.addArgument(a); }
  ("," a = argument() { argList.addArgument(a); })*
  {
    return argList;
  }
}

AstArgument argument(): {
  AstArgument argument = new AstArgument();
  Token tok;
}
{
  tok = <NAME> { argument.name = tok.image; }
  {
    return argument;
  }
}

// AstType type(): {
//   Token tok;
//   String name;
// }
// {
//   tok = <TYPE_NAME> { name = tok.image; }
//   {
//     return new AstType(name);
//   }
// }
